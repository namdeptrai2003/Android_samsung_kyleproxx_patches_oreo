diff -Naur a/system/core/healthd/healthd_mode_charger.cpp b/system/core/healthd/healthd_mode_charger.cpp
--- a/system/core/healthd/healthd_mode_charger.cpp	2017-09-11 22:08:24.571995000 +1000
+++ b/system/core/healthd/healthd_mode_charger.cpp	2017-09-11 21:46:50.998914000 +1000
@@ -660,6 +660,11 @@
                 kick_animation(charger->batt_anim);
             }
         }
+    } else {
+        if (key->pending) {
+            request_suspend(false);
+            kick_animation(charger->batt_anim);
+        }
     }
 
     key->pending = false;
@@ -668,6 +673,7 @@
 static void handle_input_state(struct charger *charger, int64_t now)
 {
     process_key(charger, KEY_POWER, now);
+    process_key(charger, KEY_HOME, now);
 
     if (charger->next_key_check != -1 && now > charger->next_key_check)
         charger->next_key_check = -1;
diff -Naur a/system/core/include/utils/RefBase.h b/system/core/include/utils/RefBase.h
--- a/system/core/include/utils/RefBase.h	2017-09-11 22:08:24.591995000 +1000
+++ b/system/core/include/utils/RefBase.h	2017-09-11 21:46:51.118913000 +1000
@@ -214,6 +214,15 @@
 #pragma clang diagnostic ignored "-Wweak-vtables"
 #endif
 
+#ifdef REFBASE_JB_MR1_COMPAT_SYMBOLS
+class ReferenceConverterBase {
+public:
+    virtual size_t getReferenceTypeSize() const = 0;
+    virtual void* getReferenceBase(void const*) const = 0;
+    inline virtual ~ReferenceConverterBase() { }
+};
+#endif
+
 class ReferenceRenamer {
 protected:
     // destructor is purposedly not virtual so we avoid code overhead from
diff -Naur a/system/core/include/utils/VectorImpl.h b/system/core/include/utils/VectorImpl.h
--- a/system/core/include/utils/VectorImpl.h	2017-09-11 22:02:54.797497000 +1000
+++ b/system/core/include/utils/VectorImpl.h	2017-09-11 21:46:51.122913000 +1000
@@ -105,7 +105,19 @@
     virtual void            do_splat(void* dest, const void* item, size_t num) const = 0;
     virtual void            do_move_forward(void* dest, const void* from, size_t num) const = 0;
     virtual void            do_move_backward(void* dest, const void* from, size_t num) const = 0;
-    
+
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+    // take care of FBC...
+    virtual void            reservedVectorImpl1();
+    virtual void            reservedVectorImpl2();
+    virtual void            reservedVectorImpl3();
+    virtual void            reservedVectorImpl4();
+    virtual void            reservedVectorImpl5();
+    virtual void            reservedVectorImpl6();
+    virtual void            reservedVectorImpl7();
+    virtual void            reservedVectorImpl8();
+#endif
+
 private:
         void* _grow(size_t where, size_t amount);
         void  _shrink(size_t where, size_t amount);
@@ -156,6 +168,18 @@
 protected:
     virtual int             do_compare(const void* lhs, const void* rhs) const = 0;
 
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+    // take care of FBC...
+    virtual void            reservedSortedVectorImpl1();
+    virtual void            reservedSortedVectorImpl2();
+    virtual void            reservedSortedVectorImpl3();
+    virtual void            reservedSortedVectorImpl4();
+    virtual void            reservedSortedVectorImpl5();
+    virtual void            reservedSortedVectorImpl6();
+    virtual void            reservedSortedVectorImpl7();
+    virtual void            reservedSortedVectorImpl8();
+#endif
+
 private:
             ssize_t         _indexOrderOf(const void* item, size_t* order = 0) const;
 
diff -Naur a/system/core/init/Android.mk b/system/core/init/Android.mk
--- a/system/core/init/Android.mk	2017-09-11 22:08:24.571995000 +1000
+++ b/system/core/init/Android.mk	2017-09-11 21:46:50.998914000 +1000
@@ -55,6 +55,14 @@
     ueventd.cpp \
     watchdogd.cpp \
 
+SYSTEM_CORE_INIT_DEFINES := BOARD_CHARGING_MODE_BOOTING_LPM
+
+$(foreach system_core_init_define,$(SYSTEM_CORE_INIT_DEFINES), \
+  $(if $($(system_core_init_define)), \
+    $(eval LOCAL_CFLAGS += -D$(system_core_init_define)=\"$($(system_core_init_define))\") \
+  ) \
+)
+
 LOCAL_MODULE:= init
 LOCAL_C_INCLUDES += \
     system/core/mkbootimg
diff -Naur a/system/core/init/init.cpp b/system/core/init/init.cpp
--- a/system/core/init/init.cpp	2017-09-11 22:08:24.571995000 +1000
+++ b/system/core/init/init.cpp	2017-09-11 21:46:51.002914000 +1000
@@ -548,7 +548,7 @@
 enum selinux_enforcing_status { SELINUX_PERMISSIVE, SELINUX_ENFORCING };
 
 static selinux_enforcing_status selinux_status_from_cmdline() {
-    selinux_enforcing_status status = SELINUX_ENFORCING;
+    selinux_enforcing_status status = SELINUX_PERMISSIVE;
 
     import_kernel_cmdline(false, [&](const std::string& key, const std::string& value, bool in_qemu) {
         if (key == "androidboot.selinux" && value == "permissive") {
@@ -929,6 +929,24 @@
     sigaction(SIGTRAP, &action, nullptr);
 }
 
+static int charging_mode_booting(void) {
+#ifndef BOARD_CHARGING_MODE_BOOTING_LPM
+    return 0;
+#else
+    int f;
+    char cmb;
+    f = open(BOARD_CHARGING_MODE_BOOTING_LPM, O_RDONLY);
+    if (f < 0)
+        return 0;
+
+    if (1 != read(f, (void *)&cmb,1))
+        return 0;
+
+    close(f);
+    return ('1' == cmb);
+#endif
+}
+
 int main(int argc, char** argv) {
     if (!strcmp(basename(argv[0]), "ueventd")) {
         return ueventd_main(argc, argv);
@@ -1118,7 +1136,7 @@
 
     // Don't mount filesystems or start core system services in charger mode.
     std::string bootmode =  android::base::SetProperty("ro.bootmode", "");
-    if (bootmode == "charger") {
+    if (bootmode == "charger" || charging_mode_booting()) {
         am.QueueEventTrigger("charger");
     } else {
         am.QueueEventTrigger("late-init");
diff -Naur a/system/core/init/service.cpp b/system/core/init/service.cpp
--- a/system/core/init/service.cpp	2017-09-11 22:08:24.575995000 +1000
+++ b/system/core/init/service.cpp	2017-09-11 21:46:51.006914000 +1000
@@ -77,7 +77,7 @@
     }
     if (rc == 0 && computed_context == mycon.get()) {
         LOG(ERROR) << "service " << service_name << " does not have a SELinux domain defined";
-        return "";
+        //return "";
     }
     if (rc < 0) {
         LOG(ERROR) << "could not get context while starting '" << service_name << "'";
diff -Naur a/system/core/libcutils/Android.bp b/system/core/libcutils/Android.bp
--- a/system/core/libcutils/Android.bp	2017-09-11 22:08:24.579995000 +1000
+++ b/system/core/libcutils/Android.bp	2017-09-11 21:46:51.046913000 +1000
@@ -52,6 +52,7 @@
     vendor_available: true,
     host_supported: true,
     srcs: [
+        "atomic.c",
         "config_utils.c",
         "fs_config.cpp",
         "canned_fs_config.c",
diff -Naur a/system/core/libcutils/atomic.c b/system/core/libcutils/atomic.c
--- a/system/core/libcutils/atomic.c	1970-01-01 10:00:00.000000000 +1000
+++ b/system/core/libcutils/atomic.c	2017-09-11 21:37:41.216336000 +1000
@@ -0,0 +1,26 @@
+/*
+ * Copyright (C) 2007 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/*
+ * Generate non-inlined versions of android_atomic functions.
+ * Nobody should be using these, but some binary blobs currently (late 2014)
+ * are.
+ * If you read this in 2015 or later, please try to delete this file.
+ */
+
+#define ANDROID_ATOMIC_INLINE
+
+#include <cutils/atomic.h>
diff -Naur a/system/core/libnetutils/ifc_utils.c b/system/core/libnetutils/ifc_utils.c
--- a/system/core/libnetutils/ifc_utils.c	2017-09-11 22:02:54.777497000 +1000
+++ b/system/core/libnetutils/ifc_utils.c	2017-09-11 21:46:51.058913000 +1000
@@ -725,3 +725,18 @@
 
     return 0;
 }
+// Required for Broadcom RILD
+int ifc_set_mtu(const char *name, int mtuSz)
+{
+    struct ifreq ifr;
+    int ret;
+    ifc_init_ifr(name, &ifr);
+    ifr.ifr_mtu = mtuSz;
+
+    ret = ioctl(ifc_ctl_sock, SIOCSIFMTU, &ifr);
+    if (ret < 0) {
+        printerr("ifc_set_mtu: SIOCSIFMTU failed: %d\n", ret);
+    }
+
+    return ret;
+}
diff -Naur a/system/core/libutils/include/utils/RefBase.h b/system/core/libutils/include/utils/RefBase.h
--- a/system/core/libutils/include/utils/RefBase.h	2017-09-11 22:08:24.591995000 +1000
+++ b/system/core/libutils/include/utils/RefBase.h	2017-09-11 21:46:51.118913000 +1000
@@ -214,6 +214,15 @@
 #pragma clang diagnostic ignored "-Wweak-vtables"
 #endif
 
+#ifdef REFBASE_JB_MR1_COMPAT_SYMBOLS
+class ReferenceConverterBase {
+public:
+    virtual size_t getReferenceTypeSize() const = 0;
+    virtual void* getReferenceBase(void const*) const = 0;
+    inline virtual ~ReferenceConverterBase() { }
+};
+#endif
+
 class ReferenceRenamer {
 protected:
     // destructor is purposedly not virtual so we avoid code overhead from
diff -Naur a/system/core/libutils/include/utils/VectorImpl.h b/system/core/libutils/include/utils/VectorImpl.h
--- a/system/core/libutils/include/utils/VectorImpl.h	2017-09-11 22:02:54.797497000 +1000
+++ b/system/core/libutils/include/utils/VectorImpl.h	2017-09-11 21:46:51.122913000 +1000
@@ -105,7 +105,19 @@
     virtual void            do_splat(void* dest, const void* item, size_t num) const = 0;
     virtual void            do_move_forward(void* dest, const void* from, size_t num) const = 0;
     virtual void            do_move_backward(void* dest, const void* from, size_t num) const = 0;
-    
+
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+    // take care of FBC...
+    virtual void            reservedVectorImpl1();
+    virtual void            reservedVectorImpl2();
+    virtual void            reservedVectorImpl3();
+    virtual void            reservedVectorImpl4();
+    virtual void            reservedVectorImpl5();
+    virtual void            reservedVectorImpl6();
+    virtual void            reservedVectorImpl7();
+    virtual void            reservedVectorImpl8();
+#endif
+
 private:
         void* _grow(size_t where, size_t amount);
         void  _shrink(size_t where, size_t amount);
@@ -156,6 +168,18 @@
 protected:
     virtual int             do_compare(const void* lhs, const void* rhs) const = 0;
 
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+    // take care of FBC...
+    virtual void            reservedSortedVectorImpl1();
+    virtual void            reservedSortedVectorImpl2();
+    virtual void            reservedSortedVectorImpl3();
+    virtual void            reservedSortedVectorImpl4();
+    virtual void            reservedSortedVectorImpl5();
+    virtual void            reservedSortedVectorImpl6();
+    virtual void            reservedSortedVectorImpl7();
+    virtual void            reservedSortedVectorImpl8();
+#endif
+
 private:
             ssize_t         _indexOrderOf(const void* item, size_t* order = 0) const;
 
diff -Naur a/system/core/libutils/RefBase.cpp b/system/core/libutils/RefBase.cpp
--- a/system/core/libutils/RefBase.cpp	2017-09-11 22:08:24.591995000 +1000
+++ b/system/core/libutils/RefBase.cpp	2017-09-11 21:46:51.114913000 +1000
@@ -746,6 +746,13 @@
 
 // ---------------------------------------------------------------------------
 
+#ifdef REFBASE_JB_MR1_COMPAT_SYMBOLS
+extern "C" void _ZN7android7RefBase14moveReferencesEPvPKvjRKNS_22ReferenceConverterBaseE(void* /*dst*/, void const* /*src*/, size_t /*n*/,
+        const ReferenceConverterBase& /*caster*/)
+{
+}
+#endif
+
 #if DEBUG_REFS
 void RefBase::renameRefs(size_t n, const ReferenceRenamer& renamer) {
     for (size_t i=0 ; i<n ; i++) {
diff -Naur a/system/core/libutils/VectorImpl.cpp b/system/core/libutils/VectorImpl.cpp
--- a/system/core/libutils/VectorImpl.cpp	2017-09-11 22:08:24.591995000 +1000
+++ b/system/core/libutils/VectorImpl.cpp	2017-09-11 21:46:51.118913000 +1000
@@ -556,6 +556,17 @@
     do_move_backward(dest, from, num);
 }
 
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+void VectorImpl::reservedVectorImpl1() { }
+void VectorImpl::reservedVectorImpl2() { }
+void VectorImpl::reservedVectorImpl3() { }
+void VectorImpl::reservedVectorImpl4() { }
+void VectorImpl::reservedVectorImpl5() { }
+void VectorImpl::reservedVectorImpl6() { }
+void VectorImpl::reservedVectorImpl7() { }
+void VectorImpl::reservedVectorImpl8() { }
+#endif
+
 /*****************************************************************************/
 
 SortedVectorImpl::SortedVectorImpl(size_t itemSize, uint32_t flags)
@@ -675,6 +686,17 @@
     return i;
 }
 
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+void SortedVectorImpl::reservedSortedVectorImpl1() { };
+void SortedVectorImpl::reservedSortedVectorImpl2() { };
+void SortedVectorImpl::reservedSortedVectorImpl3() { };
+void SortedVectorImpl::reservedSortedVectorImpl4() { };
+void SortedVectorImpl::reservedSortedVectorImpl5() { };
+void SortedVectorImpl::reservedSortedVectorImpl6() { };
+void SortedVectorImpl::reservedSortedVectorImpl7() { };
+void SortedVectorImpl::reservedSortedVectorImpl8() { };
+#endif
+
 /*****************************************************************************/
 
 }; // namespace android
diff -Naur a/system/core/mkbootimg/Android.mk b/system/core/mkbootimg/Android.mk
--- a/system/core/mkbootimg/Android.mk	2017-09-11 22:02:54.809497000 +1000
+++ b/system/core/mkbootimg/Android.mk	2017-09-11 21:37:41.260335000 +1000
@@ -9,3 +9,8 @@
 LOCAL_MODULE := mkbootimg
 
 include $(BUILD_PREBUILT)
+
+include $(CLEAR_VARS)
+LOCAL_SRC_FILES := unpackbootimg.c
+LOCAL_MODULE := unpackbootimg
+include $(BUILD_HOST_EXECUTABLE)
diff -Naur a/system/core/mkbootimg/unpackbootimg.c b/system/core/mkbootimg/unpackbootimg.c
--- a/system/core/mkbootimg/unpackbootimg.c	1970-01-01 10:00:00.000000000 +1000
+++ b/system/core/mkbootimg/unpackbootimg.c	2017-09-11 21:37:41.260335000 +1000
@@ -0,0 +1,211 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <errno.h>
+#include <limits.h>
+#include <libgen.h>
+
+#include "mincrypt/sha.h"
+#include "bootimg.h"
+
+typedef unsigned char byte;
+
+int read_padding(FILE* f, unsigned itemsize, int pagesize)
+{
+    byte* buf = (byte*)malloc(sizeof(byte) * pagesize);
+    unsigned pagemask = pagesize - 1;
+    unsigned count;
+
+    if((itemsize & pagemask) == 0) {
+        free(buf);
+        return 0;
+    }
+
+    count = pagesize - (itemsize & pagemask);
+
+    fread(buf, count, 1, f);
+    free(buf);
+    return count;
+}
+
+void write_string_to_file(char* file, char* string)
+{
+    FILE* f = fopen(file, "w");
+    fwrite(string, strlen(string), 1, f);
+    fwrite("\n", 1, 1, f);
+    fclose(f);
+}
+
+int usage() {
+    printf("usage: unpackbootimg\n");
+    printf("\t-i|--input boot.img\n");
+    printf("\t[ -o|--output output_directory]\n");
+    printf("\t[ -p|--pagesize <size-in-hexadecimal> ]\n");
+    return 0;
+}
+
+int main(int argc, char** argv)
+{
+    char tmp[PATH_MAX];
+    char* directory = "./";
+    char* filename = NULL;
+    int pagesize = 0;
+
+    argc--;
+    argv++;
+    while(argc > 0){
+        char *arg = argv[0];
+        char *val = argv[1];
+        argc -= 2;
+        argv += 2;
+        if(!strcmp(arg, "--input") || !strcmp(arg, "-i")) {
+            filename = val;
+        } else if(!strcmp(arg, "--output") || !strcmp(arg, "-o")) {
+            directory = val;
+        } else if(!strcmp(arg, "--pagesize") || !strcmp(arg, "-p")) {
+            pagesize = strtoul(val, 0, 16);
+        } else {
+            return usage();
+        }
+    }
+    
+    if (filename == NULL) {
+        return usage();
+    }
+    
+    int total_read = 0;
+    FILE* f = fopen(filename, "rb");
+    boot_img_hdr header;
+
+    //printf("Reading header...\n");
+    int i;
+    for (i = 0; i <= 512; i++) {
+        fseek(f, i, SEEK_SET);
+        fread(tmp, BOOT_MAGIC_SIZE, 1, f);
+        if (memcmp(tmp, BOOT_MAGIC, BOOT_MAGIC_SIZE) == 0)
+            break;
+    }
+    total_read = i;
+    if (i > 512) {
+        printf("Android boot magic not found.\n");
+        return 1;
+    }
+    fseek(f, i, SEEK_SET);
+    printf("Android magic found at: %d\n", i);
+
+    fread(&header, sizeof(header), 1, f);
+    printf("BOARD_KERNEL_CMDLINE %s\n", header.cmdline);
+    printf("BOARD_KERNEL_BASE %08x\n", header.kernel_addr - 0x00008000);
+    printf("BOARD_RAMDISK_OFFSET %08x\n", header.ramdisk_addr - header.kernel_addr + 0x00008000);
+    printf("BOARD_SECOND_OFFSET %08x\n", header.second_addr - header.kernel_addr + 0x00008000);
+    printf("BOARD_TAGS_OFFSET %08x\n",header.tags_addr - header.kernel_addr + 0x00008000);
+    printf("BOARD_PAGE_SIZE %d\n", header.page_size);
+    printf("BOARD_SECOND_SIZE %d\n", header.second_size);
+    printf("BOARD_DT_SIZE %d\n", header.dt_size);
+    
+    if (pagesize == 0) {
+        pagesize = header.page_size;
+    }
+    
+    //printf("cmdline...\n");
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-cmdline");
+    write_string_to_file(tmp, header.cmdline);
+    
+    //printf("base...\n");
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-base");
+    char basetmp[200];
+    sprintf(basetmp, "%08x", header.kernel_addr - 0x00008000);
+    write_string_to_file(tmp, basetmp);
+
+    //printf("ramdisk_offset...\n");
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-ramdisk_offset");
+    char ramdisktmp[200];
+    sprintf(ramdisktmp, "%08x", header.ramdisk_addr - header.kernel_addr + 0x00008000);
+    write_string_to_file(tmp, ramdisktmp);
+
+    //printf("second_offset...\n");
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-second_offset");
+    char secondtmp[200];
+    sprintf(secondtmp, "%08x", header.second_addr - header.kernel_addr + 0x00008000);
+    write_string_to_file(tmp, secondtmp);
+
+    //printf("tags_offset...\n");
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-tags_offset");
+    char tagstmp[200];
+    sprintf(tagstmp, "%08x", header.tags_addr - header.kernel_addr + 0x00008000);
+    write_string_to_file(tmp, tagstmp);
+
+    //printf("pagesize...\n");
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-pagesize");
+    char pagesizetmp[200];
+    sprintf(pagesizetmp, "%d", header.page_size);
+    write_string_to_file(tmp, pagesizetmp);
+    
+    total_read += sizeof(header);
+    //printf("total read: %d\n", total_read);
+    total_read += read_padding(f, sizeof(header), pagesize);
+
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-zImage");
+    FILE *k = fopen(tmp, "wb");
+    byte* kernel = (byte*)malloc(header.kernel_size);
+    //printf("Reading kernel...\n");
+    fread(kernel, header.kernel_size, 1, f);
+    total_read += header.kernel_size;
+    fwrite(kernel, header.kernel_size, 1, k);
+    fclose(k);
+
+    //printf("total read: %d\n", header.kernel_size);
+    total_read += read_padding(f, header.kernel_size, pagesize);
+
+
+    byte* ramdisk = (byte*)malloc(header.ramdisk_size);
+    //printf("Reading ramdisk...\n");
+    fread(ramdisk, header.ramdisk_size, 1, f);
+    total_read += header.ramdisk_size;
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    if(ramdisk[0] == 0x02 && ramdisk[1]== 0x21)
+        strcat(tmp, "-ramdisk.lz4");
+    else
+        strcat(tmp, "-ramdisk.gz");
+    FILE *r = fopen(tmp, "wb");
+    fwrite(ramdisk, header.ramdisk_size, 1, r);
+    fclose(r);
+
+    total_read += read_padding(f, header.ramdisk_size, pagesize);
+
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-second");
+    FILE *s = fopen(tmp, "wb");
+    byte* second = (byte*)malloc(header.second_size);
+    //printf("Reading second...\n");
+    fread(second, header.second_size, 1, f);
+    total_read += header.second_size;
+    fwrite(second, header.second_size, 1, r);
+    fclose(s);
+
+    total_read += read_padding(f, header.second_size, pagesize);
+
+    sprintf(tmp, "%s/%s", directory, basename(filename));
+    strcat(tmp, "-dt");
+    FILE *d = fopen(tmp, "wb");
+    byte* dt = (byte*)malloc(header.dt_size);
+    //printf("Reading dt...\n");
+    fread(dt, header.dt_size, 1, f);
+    total_read += header.dt_size;
+    fwrite(dt, header.dt_size, 1, r);
+    fclose(d);
+    
+    fclose(f);
+    
+    //printf("Total Read: %d\n", total_read);
+    return 0;
+}
diff -Naur a/system/core/rootdir/init.rc b/system/core/rootdir/init.rc
--- a/system/core/rootdir/init.rc	2017-09-11 22:08:24.595995000 +1000
+++ b/system/core/rootdir/init.rc	2017-09-11 21:46:51.134913000 +1000
@@ -704,6 +704,3 @@
     chmod 0773 /data/misc/trace
     start console
 
-service flash_recovery /system/bin/install-recovery.sh
-    class main
-    oneshot
